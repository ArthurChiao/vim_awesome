#include "vera_defines.vrh"

// Port Declaration
port count_p {
  clock;
  reset;
  enable;
  cout;
}
// This is what connects with HDL
interface count_if0 {
 input clock      CLOCK;
 output reset     PHOLD#1;
 output enable    PHOLD#1;
 input [3:0] cout PSAMPLE #-1;
}
// Now bind interface with Port
bind count_p count_bind {
  clock  count_if0.clock;
  reset  count_if0.reset;
  enable count_if0.enable;
  cout   count_if0.cout;
}
// Top level program 
program virtual_port {
   count_p count = count_bind;
   // Start the actual test here
   @ (posedge count.$clock);
   printf("Asserting Reset\n");
   count.$reset = 1;
   count.$enable = 0;
   @ (posedge count.$clock);
   printf("Deasserting Reset\n");
   count.$reset = 0;
   @ (posedge count.$clock);
   printf("Asserting Enable\n");
   count.$enable = 1;
   repeat(10) {
     @ (posedge count.$clock);
     printf("Counter value %x\n",count.$cout);
   }
   @ (posedge count.$clock);
   printf("Deasserting Enable\n");
   count.$enable = 0;
}
